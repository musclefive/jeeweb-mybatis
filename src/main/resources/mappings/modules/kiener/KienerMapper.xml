<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jeeweb.modules.kiener.mapper.MeasureDataMapper" >
    <resultMap id="BaseResultMap" type="MeasureData" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="ID" property="id" jdbcType="BIGINT" />
        <result column="rowId" property="rowId" jdbcType="BIGINT" />
        <result column="PartNumber" property="partNumber" jdbcType="VARCHAR" />
        <result column="Station" property="station" jdbcType="INTEGER" />
        <result column="Variety" property="variety" jdbcType="VARCHAR" />
        <result column="Date" property="measureDate" jdbcType="DATE" />
        <result column="Ok" property="ok" jdbcType="BOOLEAN" />
        <!--<result column="nextId" property="nextId" jdbcType="BIGINT" />-->
        <result column="nextDate" property="nextDate" jdbcType="DATE" />
        <result column="takeTime" property="takeTime" jdbcType="BIGINT" />

    </resultMap>
    <sql id="queryTable" >
      caq.MeasurementGeneralData
    </sql>
    <sql id="queryTable_MeasureTemp" >
        caq.MeasurementGeneralTemp
    </sql>
    <sql id="queryTable_DMC" >
        caq.DMCMeasurements
    </sql>
    <sql id="queryTable_Leak" >
        caq.LeakTestMeasurements
    </sql>
    <sql id="queryTable_DMCDaily" >
        caq.DMCMeasureDailyData
    </sql>
    <sql id="Base_Column_List_1" >
        A.ID,
        A.PartNumber,
        A.Station,
        A.Variety,
        A.Date as "measureDate",
        B.Date as "nextDate",
        DATEDIFF(ms , A.Date, B.Date ) as "takeTime"
    </sql>

    <select id="selectTakeTime" resultType="MeasureData">
        select
        <include refid="Base_Column_List_1" />
        from <include refid="queryTable" />  A left join  <include refid="queryTable" />  B on A.ID = B.ID - 1
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <select id="queryEngineList" resultType="MeasureData">
        select ID as "id", PartNumber as "partNumber", Date as "measureDate",
        Variety as "variety", Ok as "ok"
        from <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <select id="selectTakeTimePage" resultType="MeasureData">
        select <include refid="Base_Column_List_1" />
        from tmpMeasureData_1 A left join tmpMeasureData_2  B on A.rowId = B.rowId -1
        where B.Date is not null
    </select>


    <select id="queryRealTimeOutput" resultType="MeasureData">
        SELECT  Count(*) as "output", Station ,Variety, MAX(Date) as "nextDate", max(PartNumber) as latestNumber
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by Station, Variety order by Station, nextDate desc
    </select>

    <select id="queryRealTimeOutputChangeType" resultType="MeasureData">
        select output,A.Station, B.Variety, nextDate, latestNumber,Summary as "changeCount" from
        <include refid="queryTable_MeasureTemp" /> A left join
        (
        SELECT  Count(*) as 'output', Station ,Variety, MAX(Date) as 'nextDate', max(PartNumber) as latestNumber
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by Station, Variety
        ) B on A.station = B.Station
        where output is not NULL
        order by A.station, B.nextDate desc
    </select>

    <select id="queryRealTimeTaktTime" resultType="MeasureData">

        SELECT * from (SELECT ROW_NUMBER() over(PARTITION by Station order by Station, Date desc) as rowId,ID,
        PartNumber, Station, Variety,
        Date as "measureDate"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        ) as b
        <where>
            b.rowId = 1 or b.rowId = 2
        </where>
        order by b.Station, b.rowId
    </select>
    <select id="queryRealTimeTaktTimeSingle" resultType="MeasureData">

        SELECT ID, PartNumber, Station, Variety,
        Date as "measureDate"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>

    </select>


    <select id="queryZKGDMCbm" resultType="MeasureData">

        <!--select  Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",-->
        <!--Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(C.DMC) as dmc, count(*) as summary-->
        <!--from caq.DMCMeasurements C, caq.MeasurementGeneralData A  where DMC in-->
        <!--(-->
        <!--SELECT distinct C.DMC-->
        <!--FROM caq.MeasurementGeneralData A-->
        <!--left join caq.DMCMeasurements C on A.ID = C.General-->
        <!--where station = '10' and C.Ok = 1-->
        <!--and JobID = 14-->
        <!--and Date < '2018-01-31 07:00' and Date > '2018-01-30 07:30'-->
        <!--)  and A.station = '10' and A.OK = 1 and C.General = A.ID-->
        <!--group by DMC-->
        <!--having Min(A.Date) < '2018-01-31 07:00'  and Min(A.Date) >  '2018-01-30 07:30'-->
        <!--order by summary desc, measureDate-->

        select  Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",
        Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(C.DMC) as dmc, count(*) as summary
        from <include refid="queryTable_DMC" /> C, <include refid="queryTable" /> A  where DMC in
        (
        SELECT distinct C.DMC
        FROM <include refid="queryTable" /> A
        left join <include refid="queryTable_DMC" /> C on A.ID = C.General
        where station = '10' and C.Ok = 1
        and JobID = 14

        ${ew.sqlSegment}
        )
        and A.station = '10' and A.OK = 1 and C.General = A.ID
        ${ew_1.sqlSegment}

        order by summary desc, measureDate


        <!--SELECT Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",-->
        <!--Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(B.DMC) as dmc,-->
        <!--count(*) as summary-->
        <!--FROM <include refid="queryTable" /> A-->
        <!--left join-->
        <!--(-->
        <!--select distinct * from <include refid="queryTable_DMC" />  where DMC in-->
        <!--(-->
        <!--SELECT distinct C.DMC-->
        <!--FROM <include refid="queryTable" /> A-->
        <!--left join <include refid="queryTable_DMC" /> C on A.ID = C.General-->
        <!--where station = '10' and C.OK = 1 and JobID = 14-->
            <!--${ew.sqlSegment}-->
        <!--)-->
        <!--) B-->
        <!--on A.ID = B.General-->
        <!--where station = '10' and B.OK = 1-->

            <!--${ew_1.sqlSegment}-->

        <!--order by summary desc, measureDate-->

    </select>

    <select id="queryZKAndKWDMCbm" resultType="MeasureData">

        select  Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",
        Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(C.DMC) as dmc, count(*) as summary
        from <include refid="queryTable_DMC" /> C, <include refid="queryTable" /> A  where DMC in
        (
        SELECT distinct C.DMC
        FROM <include refid="queryTable" /> A
        left join <include refid="queryTable_DMC" /> C on A.ID = C.General
        where  C.Ok = 1
        ${ew.sqlSegment}
        )
        and A.OK = 1 and C.General = A.ID
        ${ew_1.sqlSegment}

        order by summary desc, measureDate

    </select>


    <select id="querySingleDMCbm" resultType="MeasureData">

        SELECT A.PartNumber as "PartNumber", A.Variety as "Variety",
        A.Date as "measureDate", B.DMC as "dmcNew"
        FROM <include refid="queryTable" /> A, <include refid="queryTable_DMC" /> B
        WHERE  B.Ok = 1
        ${ew.sqlSegment}
        and A.ID = B.General
        order by Date

    </select>

    <select id="queryLeasTestbm" resultType="MeasureData">

        select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",
        B.ID as "leakID",B.TestPressureA as "pressure",B.LeakRateA as "leakRate",B.CheckProg as "checkProg"
        FROM <include refid="queryTable" /> A
        left join
        <include refid="queryTable_Leak" /> B
        on A.ID = B.General
        <where>
            ${ew.sqlSegment}
        </where>
        order by DATE

    </select>

    <select id="queryDailyDMCbm" resultType="MeasureData">

        select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, left(dmc,11) as type,count(*) as summary from
        <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station,left(dmc,11)
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc

    </select>

    <select id="queryDailyDMCbmforZK" resultType="MeasureData">

        /*select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, zk as type,count(*) as summary from
        caq.DMCMeasureDailyData
        where station = '590' and maxDate between '2018-02-20' and '2018-02-26'
        group by maxDate, station,zk
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from caq.DMCMeasureDailyData
        where station = '590' and maxDate between '2018-02-20' and '2018-02-26'
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc*/

        select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, zk as type,count(*) as summary from
        <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station,zk
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc

    </select>


    <select id="queryDailyDMCbmforZK" resultType="MeasureData">

        /*select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, zk as type,count(*) as summary from
        caq.DMCMeasureDailyData
        where station = '590' and maxDate between '2018-02-20' and '2018-02-26'
        group by maxDate, station,zk
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from caq.DMCMeasureDailyData
        where station = '590' and maxDate between '2018-02-20' and '2018-02-26'
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc*/

        select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, zk as type,count(*) as summary from
        <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station,zk
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc

    </select>


</mapper>