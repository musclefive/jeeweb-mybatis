<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jeeweb.modules.kiener.mapper.MeasureDataMapper" >
    <resultMap id="BaseResultMap" type="MeasureData" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="ID" property="id" jdbcType="BIGINT" />
        <result column="rowId" property="rowId" jdbcType="BIGINT" />
        <result column="PartNumber" property="partNumber" jdbcType="VARCHAR" />
        <result column="Station" property="station" jdbcType="INTEGER" />
        <result column="Variety" property="variety" jdbcType="VARCHAR" />
        <result column="Date" property="measureDate" jdbcType="DATE" />
        <result column="Ok" property="ok" jdbcType="BOOLEAN" />
        <!--<result column="nextId" property="nextId" jdbcType="BIGINT" />-->
        <result column="nextDate" property="nextDate" jdbcType="DATE" />
        <result column="takeTime" property="takeTime" jdbcType="BIGINT" />

    </resultMap>
    <sql id="queryTable" >
      caq.MeasurementGeneralData
     </sql>
    <sql id="queryTable_DMC" >
        caq.DMCMeasurements
    </sql>
    <sql id="queryTable_Leak" >
        caq.LeakTestMeasurements
    </sql>
    <sql id="Base_Column_List_1" >
        A.ID,
        A.PartNumber,
        A.Station,
        A.Variety,
        A.Date as "measureDate",
        B.Date as "nextDate",
        DATEDIFF(ms , A.Date, B.Date ) as "takeTime"
    </sql>

    <select id="selectTakeTime" resultType="MeasureData">
        select
        <include refid="Base_Column_List_1" />
        from <include refid="queryTable" />  A left join  <include refid="queryTable" />  B on A.ID = B.ID - 1
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <select id="selectTakeTimePage" resultType="MeasureData">
        select <include refid="Base_Column_List_1" />
        from tmpMeasureData_1 A left join tmpMeasureData_2  B on A.rowId = B.rowId -1
        where B.Date is not null
    </select>


    <select id="queryRealTimeOutput" resultType="MeasureData">
        SELECT  Count(*) as "output", Station ,Variety, MAX(Date) as "nextDate", max(PartNumber) as latestNumber
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by Station, Variety order by Station, nextDate desc
    </select>

    <select id="queryRealTimeTaktTime" resultType="MeasureData">

        SELECT * from (SELECT ROW_NUMBER() over(PARTITION by Station order by Station, Date desc) as rowId,ID,
        PartNumber, Station, Variety,
        Date as "measureDate"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        ) as b
        <where>
            b.rowId = 1 or b.rowId = 2
        </where>
        order by b.Station, b.rowId
    </select>
    <select id="queryRealTimeTaktTimeSingle" resultType="MeasureData">

        SELECT ID, PartNumber, Station, Variety,
        Date as "measureDate"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>

    </select>


    <select id="queryZKGDMCbm" resultType="MeasureData">

        select MIN(C.ID) as "ID", MIN(C.PartNumber) as "PartNumber", MIN(C.Variety) as "Variety", MIN(C.Date) as "measureDate",
        MIN(C.DMC) as "dmc",MIN(D.DMC) as "dmcNew" from
        (
        SELECT distinct A.ID, PartNumber, Station, Variety, A.Date, B.DMC, B.JobID
          FROM <include refid="queryTable" /> A
          left join <include refid="queryTable_DMC" /> B on A.ID = B.General
          <where>
            ${ew.sqlSegment}
          </where>
        ) as C
        left join
        (
        SELECT distinct A.ID, PartNumber, Station, Variety, A.Date, B.DMC, B.JobID
          FROM <include refid="queryTable" /> A
          left join <include refid="queryTable_DMC" /> B on A.ID = B.General
          <where>
            ${ew.sqlSegment}
          </where>
        ) as D
        on C.ID =  D.ID
        where C.JobID = 13 and D.JobID = 14
        group by D.DMC order by measureDate

    </select>


    <select id="queryLeasTestbm" resultType="MeasureData">

        select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",
        B.ID as "leakID",B.TestPressureA as "pressure",B.LeakRateA as "leakRate",B.CheckProg as "checkProg"
        FROM <include refid="queryTable" /> A
        left join
        <include refid="queryTable_Leak" /> B
        on A.ID = B.General
        <where>
            ${ew.sqlSegment}
        </where>
        order by DATE

    </select>
</mapper>