<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jeeweb.modules.kiener.mapper.MeasureDataMapper" >
    <resultMap id="BaseResultMap" type="MeasureData" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="ID" property="id" jdbcType="BIGINT" />
        <result column="rowId" property="rowId" jdbcType="BIGINT" />
        <result column="PartNumber" property="partNumber" jdbcType="VARCHAR" />
        <result column="Station" property="station" jdbcType="INTEGER" />
        <result column="Variety" property="variety" jdbcType="VARCHAR" />
        <result column="Date" property="measureDate" jdbcType="DATE" />
        <result column="Ok" property="ok" jdbcType="BOOLEAN" />
        <!--<result column="nextId" property="nextId" jdbcType="BIGINT" />-->
        <result column="nextDate" property="nextDate" jdbcType="DATE" />
        <result column="takeTime" property="takeTime" jdbcType="BIGINT" />

    </resultMap>
    <sql id="queryTable" >
        caq.MeasurementGeneralData
    </sql>
    <sql id="queryTable_MeasureTemp" >
        caq.MeasurementGeneralTemp
    </sql>
    <sql id="queryTable_DMC" >
        caq.DMCMeasurements
    </sql>
    <sql id="queryTable_Leak" >
        caq.LeakTestMeasurements
    </sql>
    <sql id="queryTable_screw" >
        caq.ScrewingMeasurements
    </sql>

    <sql id="queryTable_force" >
        caq.ForceMeasurements
    </sql>

    <sql id="queryTable_DMCDaily" >
        caq.DMCMeasureDailyData
    </sql>
    <sql id="Base_Column_List_1" >
        A.ID,
        A.PartNumber,
        A.Station,
        A.Variety,
        A.Date as "measureDate",
        B.Date as "nextDate",
        DATEDIFF(ms , A.Date, B.Date ) as "takeTime"
    </sql>

    <select id="selectTakeTime" resultType="MeasureData">
        select
        <include refid="Base_Column_List_1" />
        from <include refid="queryTable" />  A left join  <include refid="queryTable" />  B on A.ID = B.ID - 1
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <select id="queryEngineList" resultType="MeasureData">
        select ID as "id", PartNumber as "partNumber", Date as "measureDate",
        Variety as "variety", Ok as "ok"
        from <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

    <select id="selectTakeTimePage" resultType="MeasureData">
        select <include refid="Base_Column_List_1" />
        from tmpMeasureData_1 A left join tmpMeasureData_2  B on A.rowId = B.rowId -1
        where B.Date is not null
    </select>


    <select id="queryRealTimeOutput" resultType="MeasureData">
        SELECT  Count(*) as "output", Station ,Variety, MAX(Date) as "nextDate", max(PartNumber) as latestNumber
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by Station, Variety order by Station, nextDate desc
    </select>

    <select id="queryRealTimeOutputChangeType" resultType="MeasureData">
    select output,A.Station, B.Variety, nextDate, latestNumber,Summary as "changeCount" ,Total as "total" from
    <include refid="queryTable_MeasureTemp" /> A left join
    (
    SELECT  Count(*) as 'output', Station ,Variety, MAX(Date) as 'nextDate', max(PartNumber) as latestNumber
    FROM <include refid="queryTable" />
    <where>
        ${ew.sqlSegment}
    </where>
    group by Station, Variety
    ) B on A.station = B.Station
    where output is not NULL
    order by A.station, B.nextDate desc
</select>

    <select id="queryRealTimeTaktTime" resultType="MeasureData">

        <!--SELECT * from (SELECT ROW_NUMBER() over(PARTITION by Station order by Station, Date desc) as rowId,ID,-->
        <!--PartNumber, Station, Variety,-->
        <!--Date as "measureDate"-->
        <!--FROM MeasurementGeneralData-->
        <!--where station in ('10','30','40','45')-->
        <!--and Ok = 1 and Date < '2017-08-16 15:50' and Date > '2017-08-16 06:30'-->
        <!--) as b-->
        <!--where-->
        <!--b.rowId = 1 or b.rowId = 2-->
        <!--order by b.Station, b.rowId-->

        SELECT * from (SELECT ROW_NUMBER() over(PARTITION by Station order by Station, Date desc) as rowId,ID,
        PartNumber, Station, Variety,
        Date as "measureDate"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        ) as b
        <where>
            b.rowId = 1 or b.rowId = 2
        </where>
        order by b.Station, b.rowId
    </select>

    <select id="queryGroupData" resultType="MeasureData">

        <!--SELECT ROW_NUMBER() over(PARTITION by Station order by Station, Date desc) as rowId,ID,-->
        <!--PartNumber, Station, Variety,-->
        <!--Date as "measureDate"-->
        <!--FROM MeasurementGeneralData-->
        <!--where station in ('10','30','40','45')-->
        <!--and Ok = 1 and Date < '2017-08-16 15:50' and Date > '2017-08-16 06:30'-->
        <!--order by station, rowId-->

        SELECT ROW_NUMBER() over(PARTITION by Station order by Station, Date desc) as rowId,
        ID,PartNumber, Station, Variety,
        Date as "measureDate"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        order by Station, rowId
    </select>

    <select id="queryRealTimeTaktTimeSingle" resultType="MeasureData">

        <!--SELECT ID, PartNumber, Station, Variety,-->
        <!--Date as "measureDate"-->
        <!--FROM MeasurementGeneralData-->
        <!--where Ok = 1 and Date < '2017-08-16 15:50' and Date > '2017-08-16 06:30'-->
        <!--and station = '10'-->

        SELECT ID, PartNumber, Station, Variety,
        Date as "measureDate"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>

    </select>


    <select id="queryZKGDMCbm" resultType="MeasureData">

        <!--select  Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",
        Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(C.DMC) as dmc, count(*) as summary
        from caq.DMCMeasurements C, caq.MeasurementGeneralData A  where DMC in
        (
        SELECT distinct C.DMC
        FROM caq.MeasurementGeneralData A
        left join caq.DMCMeasurements C on A.ID = C.General
        where station = '10' and C.Ok = 1
        and JobID = 14
        and Date < '2018-01-31 07:00' and Date > '2018-01-30 07:30'
        )  and A.station = '10' and A.OK = 1 and C.General = A.ID
        group by DMC
        having Min(A.Date) < '2018-01-31 07:00'  and Min(A.Date) >  '2018-01-30 07:30'
        order by summary desc, measureDate-->

        select  Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",
        Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(C.DMC) as dmc, count(*) as summary
        from <include refid="queryTable_DMC" /> C, <include refid="queryTable" /> A  where DMC in
        (
        SELECT distinct C.DMC
        FROM <include refid="queryTable" /> A
        left join <include refid="queryTable_DMC" /> C on A.ID = C.General
        where station = '10' and C.Ok = 1
        and JobID = 14

        ${ew.sqlSegment}
        )
        and A.station = '10' and A.OK = 1 and C.General = A.ID
        ${ew_1.sqlSegment}

        order by summary desc, measureDate


        <!--SELECT Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",-->
        <!--Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(B.DMC) as dmc,-->
        <!--count(*) as summary-->
        <!--FROM <include refid="queryTable" /> A-->
        <!--left join-->
        <!--(-->
        <!--select distinct * from <include refid="queryTable_DMC" />  where DMC in-->
        <!--(-->
        <!--SELECT distinct C.DMC-->
        <!--FROM <include refid="queryTable" /> A-->
        <!--left join <include refid="queryTable_DMC" /> C on A.ID = C.General-->
        <!--where station = '10' and C.OK = 1 and JobID = 14-->
            <!--${ew.sqlSegment}-->
        <!--)-->
        <!--) B-->
        <!--on A.ID = B.General-->
        <!--where station = '10' and B.OK = 1-->

            <!--${ew_1.sqlSegment}-->

        <!--order by summary desc, measureDate-->

    </select>

    <select id="queryZKAndKWDMCbm" resultType="MeasureData">

        select  Min(A.ID) as "ID", Min(PartNumber) as "PartNumber", Min(Variety) as "Variety",
        Min(A.Date) as measureDate ,Max(A.Date) as maxDate , Min(C.DMC) as dmc, count(*) as summary
        from <include refid="queryTable_DMC" /> C, <include refid="queryTable" /> A  where DMC in
        (
        SELECT distinct C.DMC
        FROM <include refid="queryTable" /> A
        left join <include refid="queryTable_DMC" /> C on A.ID = C.General
        where  C.Ok = 1
        ${ew.sqlSegment}
        )
        and A.OK = 1 and C.General = A.ID
        ${ew_1.sqlSegment}

        order by summary desc, measureDate

    </select>


    <select id="querySingleDMCbm" resultType="MeasureData">

        SELECT A.PartNumber as "PartNumber", A.Variety as "Variety",
        A.Date as "measureDate", B.DMC as "dmcNew"
        FROM <include refid="queryTable" /> A, <include refid="queryTable_DMC" /> B
        WHERE  B.Ok = 1
        ${ew.sqlSegment}
        and A.ID = B.General
        order by Date

    </select>

    <select id="queryLeasTestbm" resultType="MeasureData">
        <!--select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",-->
        <!--B.ID as "leakID",B.TestPressureA as "pressure",B.LeakRateA as "leakRate",B.CheckProg as "checkProg"-->
        <!--FROM [Vertiscape].[caq].[MeasurementGeneralData] A-->
        <!--left join-->
        <!--[Vertiscape].[caq].[LeakTestMeasurements] B-->
        <!--on A.ID = B.General-->
        <!--where A.station = '1420' and-->
        <!--A.Ok = 1 and B.ok = 1 and A.Date < '2018-03-13 07:00' and A.Date > '2017-01-01'-->
        <!--order by DATE-->


        <!--select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",-->
        <!--B.ID as "leakID",B.TestPressureA as "pressure",B.LeakRateA as "leakRate",B.CheckProg as "checkProg"-->
        <!--from-->
        <!--(select *-->
        <!--FROM [Vertiscape].[caq].[MeasurementGeneralData]  where Date < '2018-03-13 07:00'-->
        <!--and Date > '2017-01-01' and Ok = 1-->
        <!--and station ='1420'-->
        <!--) A-->

        <!--left join-->
        <!--( select * from [Vertiscape].[caq].[LeakTestMeasurements] where Ok = 1-->
        <!--) B-->

        <!--on A.ID = B.General-->

        select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",
        B.ID as "leakID",B.TestPressureA as "pressure",B.LeakRateA as "leakRate",B.CheckProg as "checkProg"
        FROM <include refid="queryTable" /> A
        left join
        <include refid="queryTable_Leak" /> B
        on A.ID = B.General
        <where>
            ${ew.sqlSegment}
        </where>
        order by DATE

    </select>

    <select id="queryDailyDMCbm" resultType="MeasureData">

        select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, left(dmc,11) as type,count(*) as summary from
        <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station,left(dmc,11)
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc

    </select>

    <select id="queryDailyDMCbmforZK" resultType="MeasureData">

        /*select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, zk as type,count(*) as summary from
        caq.DMCMeasureDailyData
        where station = '590' and maxDate between '2018-02-20' and '2018-02-26'
        group by maxDate, station,zk
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from caq.DMCMeasureDailyData
        where station = '590' and maxDate between '2018-02-20' and '2018-02-26'
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc*/

        select A.station as "Station",A.maxDate as "maxDate",A.type as "type",
        A.summary as "summary", B.total as "total" from
        (
        select station, maxDate, zk as type,count(*) as summary from
        <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station,zk
        ) A

        left join
        (
        select station, maxDate,count(*) as total
        from <include refid="queryTable_DMCDaily" />
        <where>
            ${ew.sqlSegment}
        </where>
        group by maxDate, station
        ) B on A.maxDate = B.maxDate
        order by A.maxDate desc

    </select>

    <select id="queryScrewListbm" resultType="MeasureData">

        <!--select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",-->
        <!--B.ID as "scewID",B.SpindleID as "spinID",B.ScrewPos as "screwpos",B.TorqueMin as "torqueMin",-->
        <!--B.TorqueMax as "torqueMax", B.TorqueAct as "torqueAct" ,B.AngleMin as "angleMin", B.AngleMax as "angleMax", B.AngleAct as "angleAct",-->
        <!--B.JobCode-->
        <!--from [Vertiscape].[caq].[MeasurementGeneralData] A-->
        <!--left join-->
        <!--[Vertiscape].[caq].[ScrewingMeasurements] B-->
        <!--on A.ID = B.General-->
        <!--where  A.station ='880' and A.Date  < '2018-03-15 07:00' and-->
        <!--A.Date > '2018-01-02 07:00' and A.Ok = 1-->
        <!--and B.SpindleID = '10' and B.ScrewPos = 1 and B.Ok = 1-->
        <!--order by A.Date-->

        select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",
        A.Date as "measureDate",B.ID as "scewID",B.SpindleID as "spinID",B.ScrewPos as "screwpos",
        B.TorqueMin as "torqueMin",B.TorqueMax as "torqueMax", B.TorqueAct as "torqueAct" ,
        B.AngleMin as "angleMin", B.AngleMax as "angleMax", B.AngleAct as "angleAct"
        from <include refid="queryTable" /> A
        left join
        <include refid="queryTable_screw" /> B
        on A.ID = B.General
        <where>
            ${ew.sqlSegment}
        </where>

        order by A.Date

    </select>

    <select id="queryForceListbm" resultType="MeasureData">

        <!--select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",-->
        <!--B.ID as "forceID",B.StrokeNumber as "strokeNumber",B.Hardware as "hardware",B.ForceMin as "forceMin",-->
        <!--B.ForceMax as "forceMax", B.ForceAct as "forceAct" ,B.DistMin as "distMin", B.DistMax as "distMax", B.DistAct as "distAct",-->
        <!--B.JobCode-->
        <!--from [MeasurementGeneralData] A-->
        <!--left join-->
        <!--[ForceMeasurements] B-->
        <!--on A.ID = B.General-->
        <!--where  A.station ='250' and A.Date  < '2017-11-12 07:00' and-->
        <!--A.Date > '2017-11-11 07:00' and A.Ok = 1-->
        <!--and B.StrokeNumber = 4 and B.Hardware = 1 and B.Ok = 1-->
        <!--order by A.Date-->

        select A.ID as "ID", A.PartNumber as "PartNumber",A.Station as "Station",A.Variety as "Variety",A.Date as "measureDate",
        B.ID as "forceID",B.StrokeNumber as "strokeNumber",B.Hardware as "hardware",B.ForceMin as "forceMin",
        B.ForceMax as "forceMax", B.ForceAct as "forceAct" ,B.DistMin as "distMin", B.DistMax as "distMax", B.DistAct as "distAct",
        B.JobCode
        from <include refid="queryTable" /> A
        left join
        <include refid="queryTable_force" /> B
        on A.ID = B.General
        <where>
            ${ew.sqlSegment}
        </where>

        order by A.Date

    </select>


    <select id="queryOKRatebm" resultType="MeasureData">

        <!--&#45;&#45;当Ok = 1  and ReworkInStation = 1 表示有一个发动机重装后才成功,所以之前有Nok的情况,-->
        <!--&#45;&#45;可能Nok的情况多次重复,只记录一次-->
        <!--SELECT station as "Station",variety as "Variety", count(distinct PartNumber) as "total",-->
        <!--sum (case when (OK = 1 and ReworkInStation = 0) then 1  else 0 end) as "summary",-->
        <!--sum ( case when Ok = 1  and ReworkInStation = 1 then 1 else 0 end) as "totalNok"-->
        <!--FROM [MoMo].[dbo].[MeasurementGeneralData]-->
        <!--where-->
        <!--Date > '2017-11-14 07:00' and Date < '2017-11-15 07:00'-->
        <!--group by station, variety order by station-->

        SELECT station as "Station",variety as "Variety", count(*) as "total",
        sum (case when (OK = 1 and ReworkInStation = 0) then 1  else 0 end) as "summary",
        sum ( case when (OK = 1 and ReworkInStation = 1 )then 1 else 0 end) as "totalNok"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        order by station

    </select>

    <select id="queryOKRatebmwithNoVariety" resultType="MeasureData">

        <!--SELECT station as "Station",variety as "Variety", count(*) as "total", -->
        <!--sum (case when OK = 1 then 1  else 0 end) as "summary",-->
        <!--sum ( case when Nok = 1 then 1 else 0 end) as "totalNok"-->
        <!--FROM [MoMo].[dbo].[MeasurementGeneralData]-->
        <!--where-->
        <!--Date > '2017-11-14 07:00' and Date < '2017-11-15 07:00'-->
        <!--group by station, variety order by station-->

        SELECT station as "Station", count(*) as "total",
        sum (case when (OK = 1 and ReworkInStation = 0 )then 1  else 0 end) as "summary",
        sum ( case when (Ok = 1 and ReworkInStation = 1) then 1 else 0 end) as "totalNok"
        FROM <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
        order by station

    </select>

    <select id="selectEngineTypePage" resultType="MeasureData">
        select
        DISTINCT variety as "Variety"
        from <include refid="queryTable" />
        <where>
            ${ew.sqlSegment}
        </where>
    </select>


    <!--select part online information for zk/zkg/kw-->
    <select id="selectPartOnlineList" resultType="MeasureData">
        select A.PartNumber as "PartNumber",A.Variety as "Variety",
        A.zkg as "type",A.kw as "dmc",
        right(A.zk,5) as "total", A.measureDate as "measureDate"
        from <include refid="queryTable_DMCDaily" /> A
        <where>
            ${ew.sqlSegment}
        </where>
    </select>

</mapper>